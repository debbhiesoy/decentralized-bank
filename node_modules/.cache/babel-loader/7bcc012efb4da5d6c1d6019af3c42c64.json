{"ast":null,"code":"var crypto = require('crypto');\n\nvar _require = require('./utils'),\n    checkAndInit = _require.checkAndInit,\n    smixSync = _require.smixSync; // N = Cpu cost, r = Memory cost, p = parallelization cost\n\n\nfunction scrypt(key, salt, N, r, p, dkLen, progressCallback) {\n  var _checkAndInit = checkAndInit(key, salt, N, r, p, dkLen, progressCallback),\n      XY = _checkAndInit.XY,\n      V = _checkAndInit.V,\n      B32 = _checkAndInit.B32,\n      x = _checkAndInit.x,\n      _X = _checkAndInit._X,\n      B = _checkAndInit.B,\n      tickCallback = _checkAndInit.tickCallback;\n\n  for (var i = 0; i < p; i++) {\n    smixSync(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback);\n  }\n\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256');\n}\n\nmodule.exports = scrypt;","map":{"version":3,"sources":["/Users/debbygregorio/Codes/decentralized-bank/dbank/node_modules/@web3-js/scrypt-shim/node_modules/scryptsy/lib/scryptSync.js"],"names":["crypto","require","checkAndInit","smixSync","scrypt","key","salt","N","r","p","dkLen","progressCallback","XY","V","B32","x","_X","B","tickCallback","i","pbkdf2Sync","module","exports"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,eAGIA,OAAO,CAAC,SAAD,CAHX;AAAA,IACEC,YADF,YACEA,YADF;AAAA,IAEEC,QAFF,YAEEA,QAFF,C,CAKA;;;AACA,SAASC,MAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCC,KAArC,EAA4CC,gBAA5C,EAA8D;AAC5D,sBAQIT,YAAY,CAACG,GAAD,EAAMC,IAAN,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,KAArB,EAA4BC,gBAA5B,CARhB;AAAA,MACEC,EADF,iBACEA,EADF;AAAA,MAEEC,CAFF,iBAEEA,CAFF;AAAA,MAGEC,GAHF,iBAGEA,GAHF;AAAA,MAIEC,CAJF,iBAIEA,CAJF;AAAA,MAKEC,EALF,iBAKEA,EALF;AAAA,MAMEC,CANF,iBAMEA,CANF;AAAA,MAOEC,YAPF,iBAOEA,YAPF;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,CAApB,EAAuBU,CAAC,EAAxB,EAA4B;AAC1BhB,IAAAA,QAAQ,CAACc,CAAD,EAAIE,CAAC,GAAG,GAAJ,GAAUX,CAAd,EAAiBA,CAAjB,EAAoBD,CAApB,EAAuBM,CAAvB,EAA0BD,EAA1B,EAA8BI,EAA9B,EAAkCF,GAAlC,EAAuCC,CAAvC,EAA0CG,YAA1C,CAAR;AACD;;AAED,SAAOlB,MAAM,CAACoB,UAAP,CAAkBf,GAAlB,EAAuBY,CAAvB,EAA0B,CAA1B,EAA6BP,KAA7B,EAAoC,QAApC,CAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBlB,MAAjB","sourcesContent":["const crypto = require('crypto')\nconst {\n  checkAndInit,\n  smixSync\n} = require('./utils')\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt (key, salt, N, r, p, dkLen, progressCallback) {\n  const {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  } = checkAndInit(key, salt, N, r, p, dkLen, progressCallback)\n\n  for (var i = 0; i < p; i++) {\n    smixSync(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback)\n  }\n\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256')\n}\n\nmodule.exports = scrypt\n"]},"metadata":{},"sourceType":"script"}